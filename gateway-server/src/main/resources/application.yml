server:
  port: 8080

spring:
  application:
    name: gateway-server
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081 # user-service pointer
    user:
      name: admin
      password: admin
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/users/**
          filters:
            - name: LoggingFilter
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@userKeyResolver}'
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/accounts/**
          filters:
            - name: CircuitBreaker
              args:
                name: accountServiceCircuitBreaker
                fallbackUri: forward:/fallback/account
        - id: transaction-service
          uri: lb://transaction-service
          predicates:
            - Path=/transactions/**
          filters:
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@userKeyResolver}'
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
    loadbalancer:
      retry:
        enabled: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    org.springframework.cloud.gateway: DEBUG

resilience4j:
  circuitbreaker:
    instances:
      accountServiceCircuitBreaker:
        minimum-number-of-calls: 10
        failureRateThreshold: 50
        slow-call-duration-threshold:
          seconds: 1
        wait-duration-in-open-state:
          seconds: 3